version: '3.9'
services:
  # Valtimo core

  valtimo-keycloak:
      container_name: valtimo-keycloak
      depends_on:
          - valtimo-keycloak-database
      image: quay.io/keycloak/keycloak:17.0.1-legacy
      ports:
          - "8081:8080"
      environment:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
          DB_VENDOR: postgres
          DB_ADDR: valtimo-keycloak-database
          DB_USER: keycloak
          DB_PASSWORD: keycloak
      volumes:
          - ./imports/keycloak:/opt/jboss/keycloak/imports
      command:
          - "-Dkeycloak.migration.action=import"
          - "-Dkeycloak.migration.provider=singleFile"
          - "-Dkeycloak.migration.file=/opt/jboss/keycloak/imports/realm.json"
          - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
  valtimo-keycloak-database:
      image: postgres:14.1
      container_name: valtimo-keycloak-database
      ports:
          - "54329:5432"
      environment:
          POSTGRES_USER: keycloak
          POSTGRES_PASSWORD: keycloak

  valtimo-database:
      container_name: valtimo-database
      image: postgres:14.1
      ports:
          - "54320:5432"
      environment:
          POSTGRES_USER: valtimo
          POSTGRES_PASSWORD: password
          POSTGRES_DB: valtimo
      volumes:
          - valtimo-database-data:/var/lib/postgres # persist data even if container shuts down

  valtimo-database-mysql:
      container_name: valtimo-database-mysql
      image: mysql/mysql-server:8.0.28-1.2.7-server
      ports:
          - "33060:3306"
      environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: valtimo
          MYSQL_USER: valtimo
          MYSQL_PASSWORD: password
          MYSQL_ROOT_HOST: "%"
      command: [
          "--default-authentication-plugin=mysql_native_password",
          "--lower_case_table_names=1",
          "--collation-server=utf8mb4_unicode_ci",
          "--character-set-server=utf8mb4",
          "--explicit_defaults_for_timestamp",
          "--ssl=false",
          "--innodb_flush_method=O_DIRECT",
          "--sql_mode=NO_ENGINE_SUBSTITUTION"
      ]
      volumes:
          - valtimo-database-data-mysql:/var/lib/mysql # persist data even if container shuts down

  valtimo-rabbitmq:
      image: rabbitmq:3-management
      container_name: valtimo-rabbitmq
      volumes:
          - ./imports/valtimo-rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
          - ./imports/valtimo-rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      ports:
          - "5672:5672"
          - "15672:15672"

  # Objecten

  objecten-api:
      image: maykinmedia/objects-api:2.1.1
      container_name: objecten-api
      platform: linux/amd64
      profiles:
          - objecten
      ports:
          - "8010:8000"
      environment: &objects-env
          - CORS_ALLOW_ALL_ORIGINS=true
          - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
          - DJANGO_SETTINGS_MODULE=objects.conf.docker
          - DB_HOST=objecten-api-database
          - DEBUG=true
          - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
          - TWO_FACTOR_PATCH_ADMIN=False
      depends_on:
          - objecten-api-database

  objecten-api-database:
      image: postgis/postgis:13-3.1
      container_name: objecten-api-database
      platform: linux/amd64
      profiles:
          - objecten
      ports:
          - "54321:5432"
      environment:
          - POSTGRES_USER=objects
          - POSTGRES_PASSWORD=objects
          - POSTGRES_DB=objects

  objecten-api-import:
      image: maykinmedia/objects-api:2.1.1
      container_name: objects-api-import
      platform: linux/amd64
      profiles:
          - objecten
      environment: *objects-env
      # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
      command: sh init/init.sh
      volumes:
          - ./imports/objects-api/fixtures:/app/src/objects/fixtures
          - ./imports/objects-api/init:/app/init
      depends_on:
          - objecten-api

  objecttypen-api:
      image: maykinmedia/objecttypes-api:2.1.0
      container_name: objecttypen-api
      platform: linux/amd64
      profiles:
          - objecten
      ports:
          - "8011:8000"
      environment: &objecttypes-env
          - CORS_ALLOW_ALL_ORIGINS=true
          - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
          - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
          - DB_HOST=objecttypen-api-database
          - DEBUG=true
          - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
          - TWO_FACTOR_PATCH_ADMIN=False
      depends_on:
          - objecttypen-api-database

  objecttypen-api-database:
        image: postgres:14.1
        container_name: objecttypen-api-database
        profiles:
            - objecten
        ports:
            - "54324:5432"
        environment:
            - POSTGRES_USER=objecttypes
            - POSTGRES_PASSWORD=objecttypes
            - POSTGRES_DB=objecttypes

  objecttypen-api-import:
      image: maykinmedia/objecttypes-api:2.1.0
      container_name: objecttypen-api-import
      platform: linux/amd64
      profiles:
          - objecten
      environment: *objecttypes-env
      command: sh init/init.sh
      volumes:
          - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
          - ./imports/objecttypes-api/init:/app/init
      depends_on:
          - objecttypen-api

volumes:
  valtimo-database-data:
  valtimo-database-data-mysql:
